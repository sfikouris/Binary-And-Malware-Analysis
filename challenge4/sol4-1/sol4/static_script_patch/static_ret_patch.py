import struct 
indx = -1


f = open("debris_accessctl.bin","r+b")
fsc =open("temp.txt","w")
s = f.read()
x = s # newread!

while True:
    indx = s.find(b'\x48\x8b\x45\x08\x48\x83\xc0',indx+1)
    obfuscation_val = s[indx+7]
    if indx is -1:
        break   
    
    fun_addr = s.rfind(b'\x55\x48\x89\xe5',0,indx)
    #print("40",hex(fun_addr)) #prosthese 400000 na piasis sosto.
    tmp_indx = -1
    while True:
        tmp_indx = x.find(b'\xe8',tmp_indx+1)
        if indx is -1:
            break
        tmp_call_bytes = x[tmp_indx+1:tmp_indx+5]
        call_bytes=int.from_bytes(tmp_call_bytes,byteorder='little',signed=True)
        next_instructio_addr = tmp_indx + 5 
        if((call_bytes + next_instructio_addr) == fun_addr):
            fsc.write(hex(next_instructio_addr + 0x400000))
            fsc.write(" ")
            fsc.write(hex(next_instructio_addr+obfuscation_val + 0x400000))
            fsc.write('\n')
            #print(hex(next_instructio_addr + 0x400000) , hex(next_instructio_addr+obfuscation_val + 0x400000) )
            break

f.close()
fsc.close()        
    #print(x)
 