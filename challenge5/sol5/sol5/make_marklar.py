import sys

words = []
marklar = []
words_binary = []
marklar_binary = []
word_final = []
mark_final = []
counter = 0

dictionary_word = "@ABCDEFHJKLMNPQRTUVWXYZ*~^&/:,;-"
dictionary_mark = "0123456789abcdef"

with open(sys.argv[1],"r") as f:
    file = f.readlines()

for line in file:

    if(counter % 2 == 0):
        words.append(line.strip())

    else:
        marklar.append(line.strip())
    counter = counter + 1


for word in words:
    words_binary.append("{0:b}".format(int(word)).zfill(640))

for mark in marklar:
    marklar_binary.append("{0:b}".format(int(mark)).zfill(448))

#elexe to megethos mark j lexis an en to idio



for word in words_binary:
    word_offsets = []
    for x in range(0,len(word),8):
        word_offsets.append(word[x:x+8])
        
    word_val = []
    for x in word_offsets:
        if(int(x,2)==0):
            word_val.append(0)
        else:
            word_val.append(1)

    offsets = []
    for x in range(0,len(word_val),5): # 5 for words 4 for marklars
        offsets.append(word_val[x:x+5])

    char_word = []
    for x in offsets:
        y = ''.join(map(str, x))
        char_word.append(dictionary_word[int(y,2)]) #


    word_final.append(''.join(str(i) for i in char_word))


for mark in marklar_binary:
    mark_offsets = []
    for x in range(0,len(mark),8):
        mark_offsets.append(mark[x:x+8])
        
    mark_val = []
    for x in mark_offsets:
        if(int(x,2)==0):
            mark_val.append(0)
        else:
            mark_val.append(1)

    offsets = []
    for x in range(0,len(mark_val),4): 
        offsets.append(mark_val[x:x+4])

    char_word = []
    for x in offsets:
        y = ''.join(map(str, x))
        char_word.append(dictionary_mark[int(y,2)]) 


    mark_final.append(''.join(str(i) for i in char_word))

f.close()

f= open("marklar.out","w+")

for x in range(len(mark_final)):
    f.write(mark_final[x])
    f.write(" ")
    f.write(word_final[x])
    f.write("\n")

f.close()







